# THIS FILE WAS GENERATED BY 'tool/ast.py' DO NOT MODIFY

from pydantic.dataclasses import dataclass
from typing import Any
from abc import abstractmethod

from ..utils import LoxType
from ..token import Token
from .expr import Expr

class Visitor:
	@abstractmethod
	def visitExpressionStmt(self, stmt: "Expression") -> Any: ...
	@abstractmethod
	def visitPrintStmt(self, stmt: "Print") -> Any: ...

@dataclass
class Stmt:
	@abstractmethod
	def accept(self, visitor: Visitor) -> Any: ...

@dataclass
class Expression(Stmt):
	expression: Expr

	def accept(self, visitor: Visitor) -> Any:
		return visitor.visitExpressionStmt(self)

@dataclass
class Print(Stmt):
	expression: Expr

	def accept(self, visitor: Visitor) -> Any:
		return visitor.visitPrintStmt(self)
